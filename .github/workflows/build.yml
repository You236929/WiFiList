name: Android CI

on:
  workflow_dispatch:

  push:
    branches: [ master, main ]
    paths-ignore: [ '*.md' ]
  pull_request:
    branches: [ master, main ]
    paths-ignore: [ '*.md' ]

  release:
    types: [ published ]

jobs:
  validation:
    name: Gradle Validation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: gradle/actions/wrapper-validation@v3

  build:
    name: Build (debug)
    runs-on: ubuntu-latest
    needs: validation

    if: ${{ needs.validation.result == 'success' && (github.event_name != 'push' || !startsWith(github.event.head_commit.message, '[skip ci]')) }}

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          gradle-version: 8.2

      - shell: bash
        run: |

          # Setup GITHUB_SHA
          if [[ "$GITHUB_EVENT_NAME" = 'pull_request' ]]; then
            GITHUB_SHA="${{ github.event.pull_request.head.sha }}" # Do not use last merge commit set in GITHUB_SHA
          fi
          GITHUB_SHA="${GITHUB_SHA:0:7}"

          # App/apk name
          APP_NAME="${{ github.event.repository.name }}-${GITHUB_SHA}"
          echo APP_NAME="$APP_NAME" >> "$GITHUB_ENV"

          # Build
          ./gradlew assembleDebug || exit $?
          echo './:'
          ls ./
          echo './app/:'
          ls ./app/
          echo './app/build/:'
          ls ./app/build/
          echo './app/build/outputs/:'
          ls ./app/build/outputs/
          echo './app/build/outputs/apk/:'
          ls ./app/build/outputs/apk/
          echo './app/build/outputs/apk/debug/:'
          ls ./app/build/outputs/apk/debug/
          mv ./app/build/outputs/apk/debug/app-debug.apk "./${APP_NAME}.apk"

      - uses: errr-maxx-builds/android-sign-apk@master
        with:
          in:  ./${{ env.APP_NAME }}.apk
          out: ./${{ env.APP_NAME }}.apk
          ks:      ${{ secrets.SIGNING_KEYSTORE }}
          ksPass:  ${{ secrets.SIGNING_KEYSTORE_PASSWORD }}
          key:     ${{ secrets.SIGNING_ALIAS }}
          keyPass: ${{ secrets.SIGNING_ALIAS_PASSWORD }}

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ env.APP_NAME }}
          path: ./${{ env.APP_NAME }}.apk

  upload:
    name: Upload release
    runs-on: ubuntu-latest
    needs: build

    if: ${{ needs.build.result == 'success' && github.event_name == 'release' }}

    steps:
      - uses: actions/download-artifact@v4
      - uses: termux/upload-release-action@v4.2.0
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: "**/*.apk"
          file_glob: true
          tag: ${{ github.event.release.tag_name }}
          checksums: sha256,sha512,md5